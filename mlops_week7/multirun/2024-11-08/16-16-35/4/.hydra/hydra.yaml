hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 123
      consider_prior: true
      prior_weight: 1.0
      consider_magic_clip: true
      consider_endpoints: false
      n_startup_trials: 3
      n_ei_candidates: 24
      multivariate: false
      warn_independent_sampling: true
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    direction: maximize
    storage: null
    study_name: dogbreed_hparam_optimization
    n_trials: 5
    n_jobs: 4
    search_space: null
    params:
      model.base_model: choice("resnet18", "efficientnet_b0")
      model.num_classes: choice(10)
      model.pretrained: choice(true, false)
      model.lr: choice(1e-5, 1e-2)
      model.weight_decay: choice(1e-6, 1e-2)
    custom_search_space: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - model.base_model=efficientnet_b0
    - model.num_classes=10
    - model.pretrained=False
    - model.lr=0.01
    - model.weight_decay=1e-06
    - hparams=dogbreed_ex_vit_hparam
    - ++trainer.log_every_n_steps=5
  job:
    name: train
    chdir: null
    override_dirname: ++trainer.log_every_n_steps=5,hparams=dogbreed_ex_vit_hparam,model.base_model=efficientnet_b0,model.lr=0.01,model.num_classes=10,model.pretrained=False,model.weight_decay=1e-06
    id: '4'
    num: 4
    config_name: train
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.0
    version_base: '1.3'
    cwd: /workspaces/mlops/mlops_week7
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /workspaces/mlops/mlops_week7/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /workspaces/mlops/mlops_week7/multirun/2024-11-08/16-16-35/4
    choices:
      hparams: dogbreed_ex_vit_hparam
      trainer: default
      callbacks: default
      paths: default
      logger: default
      model: dogbreed_classifier
      data: dogbreed
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: optuna
      hydra/sweeper/sampler: tpe
      hydra/launcher: basic
      hydra/output: default
  verbose: false
